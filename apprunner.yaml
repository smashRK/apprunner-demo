version: 1.0
applications:
  - name: demo_login
    runtime: nodejs18
    build:
      commands:
        build:
          - npm install --legacy-peer-deps
          - npm run build
      output:
        - .next
        - node_modules
        - public
        - package.json
        - next.config.js
    source:
      directory: nextjs-ms-entra-auth
    start:
      command: node server.js
    port: 3000
    instanceConfiguration:
      cpu: 1
      memory: 2048
    env:
      - name: NODE_ENV
        value: "production"
      - name: DEBUG
        value: "*"
      - name: NEXT_DEBUG_MODE
        value: "true"
      - name: NEXTAUTH_URL
        value: ${NEXTAUTH_URL}
      - name: NEXTAUTH_SECRET
        value: ${NEXTAUTH_SECRET}
      - name: MICROSOFT_ENTRA_ID
        value: ${MICROSOFT_ENTRA_ID}
      - name: MICROSOFT_ENTRA_ID_SECRET
        value: ${MICROSOFT_ENTRA_ID_SECRET}
      - name: MICROSOFT_ENTRA_ID_TENANT_ID
        value: ${MICROSOFT_ENTRA_ID_TENANT_ID}
      - name: MICROSOFT_ENTRA_ID_TENANT_NAME
        value: ${MICROSOFT_ENTRA_ID_TENANT_NAME}
      - name: GOOGLE_CLIENT_ID
        value: ${GOOGLE_CLIENT_ID}
      - name: GOOGLE_CLIENT_SECRET
        value: ${GOOGLE_CLIENT_SECRET}
      - name: LINKEDIN_CLIENT_ID
        value: ${LINKEDIN_CLIENT_ID}
      - name: LINKEDIN_CLIENT_SECRET
        value: ${LINKEDIN_CLIENT_SECRET}
      - name: SIGNIN_POLICY
        value: "B2C_1_signUp_signIn"
      - name: CODE_CHALLENGE
        value: ${CODE_CHALLENGE}
      - name: CODE_VERIFIER
        value: ${CODE_VERIFIER}
      - name: CODE_CHALLENGE_METHOD
        value: ${CODE_CHALLENGE_METHOD}
    healthCheck:
      path: "/api/health"
      healthyThreshold: 1
      unhealthyThreshold: 5
      interval: 30
      timeout: 10
      startupTime: 180

  - name: backend
    runtime: corretto17
    build:
      commands:
        build:
          - mvn clean install
      output:
        - target/*.jar
    source:
      directory: poccurd
    start:
      command: mvn spring-boot:run -X
    port: 8080
    instanceConfiguration:
      cpu: 1
      memory: 2048
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "prod"
      - name: DATABASE_URL
        value: "jdbc:postgresql://pg-aws.cl84q2gowr55.ap-south-1.rds.amazonaws.com/postgres"
      - name: DATABASE_USERNAME
        value: "postgres"
      - name: DATABASE_PASSWORD
        value: "v6tr61za2nHi"
      - name: NODE_ENV
        value: "production"
    healthCheck:
      path: "/actuator/health"
      healthyThreshold: 1
      unhealthyThreshold: 5
      interval: 30
      timeout: 10

routes:
  - path: "/api/*"
    service: backend
  - path: "/*"
    service: demo_login
